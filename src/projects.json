[
    {
        "title": "Quant Freelance",
        "projectType": "A Freelance Webstore",
        "description": "<h4>What is it?</h4><p>Quant Freelance is a webstore for freelancers to sell their services such as digital art and copy editing. Users are able to sign up as a customer or seller and can find any service they desire through searching or filtering. Sellers are able to customize their product pages however they like with the use of a built in website builder. This allows them to brand their product however they like while keeping the benefit of  a centralized webstore.</p><p>Quant Freelance was built as my Capstone project at Neumont College of Computer Science.</p><h4>The Technical Side</h4><p>Quant was split into two main parts: the front-end and the back-end. The front-end was created in React using hooks, while the backend was a simple Node Express server. The front-end was responsible for serving up the webpages to the user. The back-end kept track of user's sessions and controlled data access to the Mongo database. These two servers were hosted on a virtual private server behind an Nginx reverse proxy.</p><h4>What I Learned</h4><p>I did not see much value in a webstore that only ran locally, so the first thing I did was learn how to get this project on the internet. I learned how to purchase my own domain, and VPS. I then learned how to set up Nginx on the VPS and connect my domain to it.</p><p>After setting up my environment, I had to learn the new way of React with hooks and class components. I used this new knowledge to create my webpages and develop a mini website builder.</p>",
        "images": ["service-page-example.png", "logo-small.png", "categories.png"],
        "imageLayout": "layout3a",
        "coverImage": "cover-image.png",
        "githubLink": "https://github.com/RUnroe/QuantFreelanceWebStore",
        "liveSiteLink": "https://quant.ryanunroe.com/",
        "primaryLanguage": "React"
    },

    {
        "title": "Bifrost",
        "projectType": "A Discord Clone",
        "description": "<h4>What is it?</h4><p>Bifrost is a lightweight clone of Discord. It runs on the internet and allows users to chat in real-time. Users can create different accounts, servers (guilds), and channels. Users also have control over their profile image and guild image.</p><p>Bifrost was created in a team of 3 for a project class at Neumont College of Computer Science.</p><h4>The Technical Side</h4><p>Both the front-end and the back-end of Bifrost is served up through a Node Express server. This Node server is running on a virtual private server behind an Nginx reverse proxy. The front-end uses pug to render the pages. A Cassandra database and snowflake identifiers are used to mimic Discord's back-end.</p><h4>What I Learned</h4><p>This was my first real web-based project in a group, so learning how to split up the work was a bit challenging. Thanks to good planning and following the scrum methodology, we were able to work well together. We all had a simple understanding of the technology we used, but this project allowed us to expand upon our knowledge even more. We also learned how to incorporate web sockets to allow messages to appear in real-time.</p>",
        "images": ["landing.png", "app.png"],
        "imageLayout": "layout2a",
        "coverImage": "cover-image-2.png",
        "githubLink": "https://github.com/josephreed2600/bifrost",
        "liveSiteLink": "https://bifrost.jtreed.org/",
        "primaryLanguage": "JavaScript"
    },

    {
        "title": "Ascension",
        "projectType": "A video game renting and tracking website",
        "description": "<h4>What is it?</h4><p>Ascension is a website that allows users to keep track of their video games. It lets them add and remove games within their library and then gives the ability to filter and search for games. Once games are in the library, they can be rented out to friends. Ascension keeps track of who a game is rented out to and when it was rented out.</p> <p>Ascension was created as a final project for a class at Neumont College of Computer Science.</p><h4>The Technical Side</h4><p>Ascension was built as an ASP.NET MVC (model view controller) application. It uses sessions and a local SQL Server database to allow multiple accounts to use the site and persist their data. The pages were styled with custom CSS and Bootstrap.</p><h4>What I Learned</h4><p>This was one of my first projects in ASP.NET, so there was a lot for me to learn. Throughout this project, I reinforced my knowledge on how to create a basic ASP.NET MVC application while also learning how to integrate with database using roles, migrations, and model binding.</p>",
        "images": ["app.png", "cover-image.png", "filters.png"],
        "imageLayout": "layout3a",
        "coverImage": "cover-image.png",
        "githubLink": "https://github.com/RUnroe/VideoGameLibrary",
        "liveSiteLink": "",
        "primaryLanguage": "MVC ASP.NET"
    },

    {
        "title": "RasPi Getting Started",
        "projectType": "A Raspberry Pi Setup and Tutorial guide",
        "description": "<h4>What is it?</h4><p>This single page application is a guide to help people get started with a Raspberry Pi. It contains multiple sections and graphics to help users follow along. This guide takes users through an introduction and shows how to set up their own Raspberry Pi. This guide also proposes potential next steps for the users to take if they wish.</p><h4>The Technical Side</h4><p>This Raspberry Pi Getting Started guide was created as a SPA (single page application) in Angular. The pages were styled with custom SCSS and all of the images were taken/created and edited by me. </p><h4>What I Learned</h4><p>Throughout this project, I learned how to make a simple Angular application. With this, I learned how to load different content into a SPA. I also learned how to code in TypeScript.</p><p>I also took this opportunity to reinforce and gain more knowledge about Raspberry Pis. </p>",
        "images": ["app-2.png", "sections.png"],
        "imageLayout": "layout2b",
        "coverImage": "cover-image.png",
        "githubLink": "https://github.com/RUnroe/RasPiGettingStarted",
        "liveSiteLink": "",
        "primaryLanguage": "Angular"
    },

    {
        "title": "Sassy",
        "projectType": "A Bootstrap like SCSS Framework",
        "description": "",
        "images": [""],
        "imageLayout": "layout",
        "coverImage": "",
        "githubLink": "https://github.com/RUnroe/Scss-Framework",
        "liveSiteLink": "",
        "primaryLanguage": "SCSS"
    },

    {
        "title": "Lightsaber",
        "projectType": "A mock webstore",
        "description": "",
        "images": [""],
        "imageLayout": "layout",
        "coverImage": "",
        "githubLink": "https://github.com/RUnroe/lightsaber-webstore",
        "liveSiteLink": "",
        "primaryLanguage": "JavaScript"
    }
]